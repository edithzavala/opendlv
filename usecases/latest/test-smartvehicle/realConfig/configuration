global.buffer.memorySegmentSize = 2800000 # Size of a memory segment in bytes.
global.buffer.numberOfMemorySegments = 20 # Number of memory segments.

global.session.expectedModules = odrecorderh264,proxy-camera,adaptation-ksamclient:3,adaptation-ksamserver:4

adaptation-ksamclient:3.simulation = 0

odcockpit.directoriesForSharedLibaries = /opt # List of directories to search for libodvd*.so files.
global.car = 0
global.scenario = 0 
global.showGrid = 0


odsupercomponent.pulseshift.shift = 10000 # (in microseconds)
odsupercomponent.pulsetimeack.timeout = 5000 # (in milliseconds)
odsupercomponent.pulsetimeack.yield = 5000 # (in microseconds)
odsupercomponent.pulsetimeack.exclude = odcockpit

#odrecorderh264.output = file://recorder.rec # If this parameter is not present, odrecorderh264 will autogenerate a filename.
odrecorderh264.remoteControl = 0 # 0 = no remote control, 1 = allowing remote control (i.e. start and stop recording)
odrecorderh264.dumpSharedData = 0 # 0 = do not dump shared images and shared images, 1 = otherwise
odrecorderh264.lossless = 1 # Set to 1 to enable h264 lossless encoding.
odrecorderh264.portbaseforchildprocesses = 29000 # Every spawned child processes is connecting to the parent process via TCP using the base port plus its increasing ID.

proxy-camera-axis:0.name = AxisCamera0
proxy-camera-axis:0.debug = 0               # 1 = show recording (requires X11), 0 = otherwise.
proxy-camera-axis:0.address = 10.42.42.14
proxy-camera-axis:0.username = guest
proxy-camera-axis:0.password = axis
proxy-camera-axis:0.width = 1280
proxy-camera-axis:0.height = 720
proxy-camera-axis:0.calibrationfile = /opt/opendlv.core.configuration/file.yml  # This file must be accessible from within the Docker container.

proxy-applanix.ip = 10.42.42.40    # Change to Applanix IP.
proxy-applanix.port = 5602    

proxy-velodyne32.pointCloudOption = 1 #0: shared point cloud (SPC) only; 1: compact point cloud (CPC) only; 2: both SPC and CPC
proxy-velodyne32.SPCOption = 1  # 0: xyz+intensity; 1: distance+azimuth+vertical angle+intensity
proxy-velodyne32.CPCIntensityOption = 0  #0: no intensity, 1: with intensity, 2: both
proxy-velodyne32.numberOfBitsForIntensity = 7 #Range 0-7. Only used when CPC is enabled.
proxy-velodyne32.intensityPlacement = 0 #0: higher bits; 1: lower bits
proxy-velodyne32.distanceEncoding = 0 #0: cm; 1: 2mm
proxy-velodyne32.sharedMemory.name = velodyne32SM
#The total size of the shared memory: MAX_POINT_SIZE * NUMBER_OF_COMPONENTS_PER_POINT * sizeof(float), where MAX_POINT_SIZE is the maximum number of points per frame (This upper bound should be set as low as possible, as it affects the shared memory size and thus the frame updating speed), NUMBER_OF_COMPONENTS_PER_POIN=4  Recommended values: MAX_POINT_SIZE=30000->proxy-velodyne16.sharedMemory.size = 480000 
proxy-velodyne32.sharedMemory.size = 1120000 
proxy-velodyne32.udpReceiverIP = 0.0.0.0
proxy-velodyne32.udpPort = 2368
proxy-velodyne32.calibration = HDL-32E.xml


proxy-xc90.devicenode = can0        # SocketCAN device.
proxy-xc90.debug = 0                # Enable debug output to console.
proxy-xc90.record_gcm = 0           # 1 = Dump generic CAN messages (no broadcasting).
proxy-xc90.record_mapped_data = 0   # 1 = Record mapped containers.
proxy-xc90.record_asc = 0           # 1 = Dump ASC data from CAN.
proxy-xc90.read-only = 1            # 1 = read-only , 0 = read/write
