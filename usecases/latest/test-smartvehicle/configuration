### CONFIGURATION GLOBAL
global.car = Car1.objx
global.scenario = file://Parking-boxes-2.scnx
global.showGrid = 0
global.reference.WGS84.latitude = 57.70485804
global.reference.WGS84.longitude = -11.93831921
global.buffer.memorySegmentSize = 480000 # Size of a memory segment in bytes.
global.buffer.numberOfMemorySegments = 50 # Number of memory segments.
global.session.expectedModules = odsimirus, odsimirus:1, odsimvehicle, odsimvehicle:1, lanefollower, lanefollower:1, odcockpit, adaptation-ksamclient:3, adaptation-ksamserver:4, odsimcamera, odsimcamera:1, knowledge-v2vcam, knowledge-v2vcam:1


### CONFIGURATION ODSUPERCOMPONENT
odsupercomponent.pulseshift.shift = 10000 # (in microseconds)
odsupercomponent.pulsetimeack.exclude = odcockpit
odsupercomponent.pulsetimeack.timeout = 5000 # (in milliseconds)
odsupercomponent.pulsetimeack.yield = 5000 # (in microseconds)

### CONFIGURATION ODCOCKPIT
odcockpit.plugins =
#configurationviewer,healthstatusviewer,livefeed,logmessage,player,sessionviewer,sharedimageviewer,streetmapviewer # List of modules to show in odcockpit; leave blank to show all.
odcockpit.directoriesForSharedLibaries = /opt,/lib # List of directories to search for libodvd*.so files.
odcockpit.runtimeconfiguration.key1 = 0.1
odcockpit.runtimeconfiguration.key2 = 1.2
odcockpit.runtimeconfiguration.key3 = -3.2

### CONFIGURATION ODSIMIRUS
odsimirus.numberOfSensors = 6                   # Number of configured sensors.
odsimirus.showPolygons = 1                      # Show explicitly all polygons.

odsimirus.sensor0.id = 0                        # This ID is used in SensorBoardData structure.
odsimirus.sensor0.name = Infrared_FrontRight    # Name of the sensor
odsimirus.sensor0.rotZ = -90                    # Rotation of the sensor around the Z-axis in degrees, positive = counterclockwise, negative = clockwise, 0 = 12am, -90 = 3pm, ...
odsimirus.sensor0.translation = (1.0;-1.0;0.0)  # Translation (X;Y;Z) w.r.t. vehicle's center
odsimirus.sensor0.angleFOV = 5                  # In degrees.
odsimirus.sensor0.distanceFOV = 3               # In meters.
odsimirus.sensor0.clampDistance = 2.9           # Any distances greater than this distance will be ignored and -1 will be returned.
odsimirus.sensor0.showFOV = 1                   # Show FOV in monitor.

odsimirus.sensor1.id = 1                        # This ID is used in SensorBoardData structure.
odsimirus.sensor1.name = Infrared_Rear          # Name of the sensor
odsimirus.sensor1.rotZ = -180                   # Rotation of the sensor around the Z-axis in degrees, positive = counterclockwise, negative = clockwise, 0 = 12am, -90 = 3pm, ...
odsimirus.sensor1.translation = (-1.0;0.0;0.0)  # Translation (X;Y;Z) w.r.t. vehicle's center
odsimirus.sensor1.angleFOV = 5                  # In degrees.
odsimirus.sensor1.distanceFOV = 3               # In meters.
odsimirus.sensor1.clampDistance = 2.9           # Any distances greater than this distance will be ignored and -1 will be returned.
odsimirus.sensor1.showFOV = 1                   # Show FOV in monitor.
odsimirus.sensor1.faultModel.skip = 1

odsimirus.sensor2.id = 2                        # This ID is used in SensorBoardData structure.
odsimirus.sensor2.name = Infrared_RearRight     # Name of the sensor
odsimirus.sensor2.rotZ = -90                    # Rotation of the sensor around the Z-axis in degrees, positive = counterclockwise, negative = clockwise, 0 = 12am, -90 = 3pm, ...
odsimirus.sensor2.translation = (-1.0;-1.0;0.0) # Translation (X;Y;Z) w.r.t. vehicle's center
odsimirus.sensor2.angleFOV = 5                  # In degrees.
odsimirus.sensor2.distanceFOV = 3               # In meters.
odsimirus.sensor2.clampDistance = 2.9           # Any distances greater than this distance will be ignored and -1 will be returned.
odsimirus.sensor2.showFOV = 1                   # Show FOV in monitor.

odsimirus.sensor3.id = 3                        # This ID is used in SensorBoardData structure.
odsimirus.sensor3.name = UltraSonic_FrontCenter # Name of the sensor
odsimirus.sensor3.rotZ = 0                      # Rotation of the sensor around the Z-axis in degrees, positive = counterclockwise, negative = clockwise, 0 = 12am, -90 = 3pm, ...
odsimirus.sensor3.translation = (1.0;0.0;0.0)   # Translation (X;Y;Z) w.r.t. vehicle's center
odsimirus.sensor3.angleFOV = 20                 # In degrees.
odsimirus.sensor3.distanceFOV = 40              # In meters.
odsimirus.sensor3.clampDistance = 39            # Any distances greater than this distance will be ignored and -1 will be returned.
odsimirus.sensor3.showFOV = 1                   # Show FOV in monitor.

odsimirus.sensor4.id = 4                        # This ID is used in SensorBoardData structure.
odsimirus.sensor4.name = UltraSonic_FrontRight  # Name of the sensor
odsimirus.sensor4.rotZ = -45                    # Rotation of the sensor around the Z-axis in degrees, positive = counterclockwise, negative = clockwise, 0 = 12am, -90 = 3pm, ...
odsimirus.sensor4.translation = (1.0;-1.0;0.0)  # Translation (X;Y;Z) w.r.t. vehicle's center
odsimirus.sensor4.angleFOV = 20                 # In degrees.
odsimirus.sensor4.distanceFOV = 40              # In meters.
odsimirus.sensor4.clampDistance = 39            # Any distances greater than this distance will be ignored and -1 will be returned.
odsimirus.sensor4.showFOV = 1                   # Show FOV in monitor.

odsimirus.sensor5.id = 5                        # This ID is used in SensorBoardData structure.
odsimirus.sensor5.name = UltraSonic_RearRight   # Name of the sensor
odsimirus.sensor5.rotZ = -135                   # Rotation of the sensor around the Z-axis in degrees, positive = counterclockwise, negative = clockwise, 0 = 12am, -90 = 3pm, ...
odsimirus.sensor5.translation = (-1.0;-1.0;0.0) # Translation (X;Y;Z) w.r.t. vehicle's center
odsimirus.sensor5.angleFOV = 20                 # In degrees.
odsimirus.sensor5.distanceFOV = 40              # In meters.
odsimirus.sensor5.clampDistance = 39            # Any distances greater than this distance will be ignored and -1 will be returned.
odsimirus.sensor5.showFOV = 1 # Show FOV in monitor.

### CONFIGURATION ODSIMIRUS_1
odsimirus:1.numberOfSensors = 6                   # Number of configured sensors.
odsimirus:1.showPolygons = 1                      # Show explicitly all polygons.

odsimirus:1.sensor0.id = 0                        # This ID is used in SensorBoardData structure.
odsimirus:1.sensor0.name = Infrared_FrontRight    # Name of the sensor
odsimirus:1.sensor0.rotZ = -90                    # Rotation of the sensor around the Z-axis in degrees, positive = counterclockwise, negative = clockwise, 0 = 12am, -90 = 3pm, ...
odsimirus:1.sensor0.translation = (1.0;-1.0;0.0)  # Translation (X;Y;Z) w.r.t. vehicle's center
odsimirus:1.sensor0.angleFOV = 5                  # In degrees.
odsimirus:1.sensor0.distanceFOV = 3               # In meters.
odsimirus:1.sensor0.clampDistance = 2.9           # Any distances greater than this distance will be ignored and -1 will be returned.
odsimirus:1.sensor0.showFOV = 1                   # Show FOV in monitor.

odsimirus:1.sensor1.id = 1                        # This ID is used in SensorBoardData structure.
odsimirus:1.sensor1.name = Infrared_Rear          # Name of the sensor
odsimirus:1.sensor1.rotZ = -180                   # Rotation of the sensor around the Z-axis in degrees, positive = counterclockwise, negative = clockwise, 0 = 12am, -90 = 3pm, ...
odsimirus:1.sensor1.translation = (-1.0;0.0;0.0)  # Translation (X;Y;Z) w.r.t. vehicle's center
odsimirus:1.sensor1.angleFOV = 5                  # In degrees.
odsimirus:1.sensor1.distanceFOV = 3               # In meters.
odsimirus:1.sensor1.clampDistance = 2.9           # Any distances greater than this distance will be ignored and -1 will be returned.
odsimirus:1.sensor1.showFOV = 1                   # Show FOV in monitor.
odsimirus:1.sensor1.faultModel.skip = 0

odsimirus:1.sensor2.id = 2                        # This ID is used in SensorBoardData structure.
odsimirus:1.sensor2.name = Infrared_RearRight     # Name of the sensor
odsimirus:1.sensor2.rotZ = -90                    # Rotation of the sensor around the Z-axis in degrees, positive = counterclockwise, negative = clockwise, 0 = 12am, -90 = 3pm, ...
odsimirus:1.sensor2.translation = (-1.0;-1.0;0.0) # Translation (X;Y;Z) w.r.t. vehicle's center
odsimirus:1.sensor2.angleFOV = 5                  # In degrees.
odsimirus:1.sensor2.distanceFOV = 3               # In meters.
odsimirus:1.sensor2.clampDistance = 2.9           # Any distances greater than this distance will be ignored and -1 will be returned.
odsimirus:1.sensor2.showFOV = 1                   # Show FOV in monitor.

odsimirus:1.sensor3.id = 3                        # This ID is used in SensorBoardData structure.
odsimirus:1.sensor3.name = UltraSonic_FrontCenter # Name of the sensor
odsimirus:1.sensor3.rotZ = 0                      # Rotation of the sensor around the Z-axis in degrees, positive = counterclockwise, negative = clockwise, 0 = 12am, -90 = 3pm, ...
odsimirus:1.sensor3.translation = (1.0;0.0;0.0)   # Translation (X;Y;Z) w.r.t. vehicle's center
odsimirus:1.sensor3.angleFOV = 20                 # In degrees.
odsimirus:1.sensor3.distanceFOV = 40              # In meters.
odsimirus:1.sensor3.clampDistance = 39            # Any distances greater than this distance will be ignored and -1 will be returned.
odsimirus:1.sensor3.showFOV = 1                   # Show FOV in monitor.

odsimirus:1.sensor4.id = 4                        # This ID is used in SensorBoardData structure.
odsimirus:1.sensor4.name = UltraSonic_FrontRight  # Name of the sensor
odsimirus:1.sensor4.rotZ = -45                    # Rotation of the sensor around the Z-axis in degrees, positive = counterclockwise, negative = clockwise, 0 = 12am, -90 = 3pm, ...
odsimirus:1.sensor4.translation = (1.0;-1.0;0.0)  # Translation (X;Y;Z) w.r.t. vehicle's center
odsimirus:1.sensor4.angleFOV = 20                 # In degrees.
odsimirus:1.sensor4.distanceFOV = 40              # In meters.
odsimirus:1.sensor4.clampDistance = 39            # Any distances greater than this distance will be ignored and -1 will be returned.
odsimirus:1.sensor4.showFOV = 1                   # Show FOV in monitor.

odsimirus:1.sensor5.id = 5                        # This ID is used in SensorBoardData structure.
odsimirus:1.sensor5.name = UltraSonic_RearRight   # Name of the sensor
odsimirus:1.sensor5.rotZ = -135                   # Rotation of the sensor around the Z-axis in degrees, positive = counterclockwise, negative = clockwise, 0 = 12am, -90 = 3pm, ...
odsimirus:1.sensor5.translation = (-1.0;-1.0;0.0) # Translation (X;Y;Z) w.r.t. vehicle's center
odsimirus:1.sensor5.angleFOV = 20                 # In degrees.
odsimirus:1.sensor5.distanceFOV = 40              # In meters.
odsimirus:1.sensor5.clampDistance = 39            # Any distances greater than this distance will be ignored and -1 will be returned.
odsimirus:1.sensor5.showFOV = 1 # Show FOV in monitor.

### CONFIGURATION ODSIMVEHICLE
odsimvehicle.posX = 0                     # Initial position X in cartesian coordinates.
odsimvehicle.posY = 8                     # Initial position Y in cartesian coordinates.
odsimvehicle.headingDEG = 90
odsimvehicle.model=LinearBicycleModelNew  # Which motion model to be used: LinearBicycleModelNew or LinearBicycleModel (for CaroloCup 2013!).
odsimvehicle.LinearBicycleModelNew.withSpeedController=1          # iff 1: use the VehicleControl.m_speed field; otherwise, ignore m_speed and use VehicleControl.m_acceleration field
odsimvehicle.LinearBicycleModelNew.minimumTurningRadiusLeft=4.85  # Minimum turning radius to the left (for calculating maximum steering angle to the left); Attention! we used data from the miniature vehicle Meili and thus, all values are scaled by factor 10 to be compatible with the simulation!
odsimvehicle.LinearBicycleModelNew.minimumTurningRadiusRight=5.32 # Minimum turning radius to the right (for calculating maximum steering angle to the right); Attention! we used data from the miniature vehicle Meili and thus, all values are scaled by factor 10 to be compatible with the simulation!
odsimvehicle.LinearBicycleModelNew.wheelbase=2.65                 # Wheelbase; Attention! we used data from the miniature vehicle Meili and thus, all values are scaled by factor 10 to be compatible with the simulation!
odsimvehicle.LinearBicycleModelNew.invertedSteering=0             # iff 0: interpret neg. steering wheel angles as steering to the left; iff 1: otherwise
odsimvehicle.LinearBicycleModelNew.maxSpeed=2.0                   # maxium speed in m/ss
odsimvehicle.LinearBicycleModel.minimumTurningRadius=4.24    # Minimum turning radius in m.
odsimvehicle.LinearBicycleModel.vehicleMass=1700.0           # Mass in kg.
odsimvehicle.LinearBicycleModel.adherenceCoefficient=100.0   # N per MPS (squared).
odsimvehicle.LinearBicycleModel.idleForce=200.0              # Force if vehicle is in idle (no gear) in N.
odsimvehicle.LinearBicycleModel.Ksteering=2.0
odsimvehicle.LinearBicycleModel.maximumSteeringRate=50.0
odsimvehicle.LinearBicycleModel.Kthrottle=40.0
odsimvehicle.LinearBicycleModel.tauBrake=1.0
odsimvehicle.LinearBicycleModel.KstaticBrake=100.0
odsimvehicle.LinearBicycleModel.KdynamicBrake=60.0

### CONFIGURATION ODSIMVEHICLE_1
odsimvehicle:1.posX = 0                     # Initial position X in cartesian coordinates.
odsimvehicle:1.posY = 0                     # Initial position Y in cartesian coordinates.
odsimvehicle:1.headingDEG = 90
odsimvehicle:1.model=LinearBicycleModelNew  # Which motion model to be used: LinearBicycleModelNew or LinearBicycleModel (for CaroloCup 2013!).
odsimvehicle:1.LinearBicycleModelNew.withSpeedController=1          # iff 1: use the VehicleControl.m_speed field; otherwise, ignore m_speed and use VehicleControl.m_acceleration field
odsimvehicle:1.LinearBicycleModelNew.minimumTurningRadiusLeft=4.85  # Minimum turning radius to the left (for calculating maximum steering angle to the left); Attention! we used data from the miniature vehicle Meili and thus, all values are scaled by factor 10 to be compatible with the simulation!
odsimvehicle:1.LinearBicycleModelNew.minimumTurningRadiusRight=5.32 # Minimum turning radius to the right (for calculating maximum steering angle to the right); Attention! we used data from the miniature vehicle Meili and thus, all values are scaled by factor 10 to be compatible with the simulation!
odsimvehicle:1.LinearBicycleModelNew.wheelbase=2.65                 # Wheelbase; Attention! we used data from the miniature vehicle Meili and thus, all values are scaled by factor 10 to be compatible with the simulation!
odsimvehicle:1.LinearBicycleModelNew.invertedSteering=0             # iff 0: interpret neg. steering wheel angles as steering to the left; iff 1: otherwise
odsimvehicle:1.LinearBicycleModelNew.maxSpeed=2.0                   # maxium speed in m/ss
odsimvehicle:1.LinearBicycleModel.minimumTurningRadius=4.24    # Minimum turning radius in m.
odsimvehicle:1.LinearBicycleModel.vehicleMass=1700.0           # Mass in kg.
odsimvehicle:1.LinearBicycleModel.adherenceCoefficient=100.0   # N per MPS (squared).
odsimvehicle:1.LinearBicycleModel.idleForce=200.0              # Force if vehicle is in idle (no gear) in N.
odsimvehicle:1.LinearBicycleModel.Ksteering=2.0
odsimvehicle:1.LinearBicycleModel.maximumSteeringRate=50.0
odsimvehicle:1.LinearBicycleModel.Kthrottle=40.0
odsimvehicle:1.LinearBicycleModel.tauBrake=1.0
odsimvehicle:1.LinearBicycleModel.KstaticBrake=100.0
odsimvehicle:1.LinearBicycleModel.KdynamicBrake=60.0

### CONFIGURATION CAMERA
odsimcamera.id = 0

### CONFIGURATION CAMERA_1
odsimcamera:1.id = 1

### CONFIGURATION LANEFOLLOWER
lanefollower.camera_id = 0 # select here the proper camera
lanefollower.debug = 1 # set to 0 to disable any windows and further output

### CONFIGURATION LANEFOLLOWER_1
lanefollower:1.camera_id = 1 # select here the proper camera
lanefollower:1.debug = 1 # set to 0 to disable any windows and further output

### CONFIGURATION V2VCAM
knowledge-v2vcam.printOutbound = 1
knowledge-v2vcam.printInbound = 1
knowledge-v2vcam.record = 0
knowledge-v2vcam.debug = 1
knowledge-v2vcam.simulation = 1

### CONFIGURATION V2VCAM_1
knowledge-v2vcam:1.printOutbound = 1
knowledge-v2vcam:1.printInbound = 1
knowledge-v2vcam:1.record = 0
knowledge-v2vcam:1.debug = 1
knowledge-v2vcam:1.simulation = 1
